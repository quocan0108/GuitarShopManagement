/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package guitarshopmanagementsystem;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author quoca
 */
public class TatCaSanPhamJP extends javax.swing.JPanel {

    DefaultTableModel tableModel;
    public TatCaSanPhamJP() {
        initComponents();
        try {
			Connection con = JDBCConnection.getJDBCConnection();
            String sql = "select * from products order by type"; 
            PreparedStatement ps = con.prepareCall(sql);
            ResultSet rs = ps.executeQuery();
            
            DefaultTableModel model = new DefaultTableModel();
            
            ResultSetMetaData rsmd = rs.getMetaData();
			int socot = rsmd.getColumnCount();
			for(int j = 1; j <= socot; j++) {
				model.addColumn(rsmd.getColumnLabel(j));
			}
			
			while(rs.next()) {
				Object[] row = new Object[socot];
				for(int i = 1; i <= socot; i++) {
					row[i - 1] = rs.getObject(i);
				}
				model.addRow(row);
			}
			tbTatCaSanPham.setModel(model);
			tbTatCaSanPham.setVisible(true);
	
    	} catch(Exception e) {}
        tbTatCaSanPham.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tbTatCaSanPham.getSelectedRow();
                if (row >= 0) {
                    String ten = tbTatCaSanPham.getValueAt(row, 1).toString();
                    String gia = tbTatCaSanPham.getValueAt(row, 2).toString();
                    String conHang = tbTatCaSanPham.getValueAt(row, 3).toString();
                    String loai = tbTatCaSanPham.getValueAt(row, 4).toString();
                    
                    txtTen.setText(ten);
                    txtGia.setText(gia);
                    txtConHang.setText(conHang);
                    cbbLoai.setSelectedItem(loai);
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        txtConHang = new javax.swing.JTextField();
        cbbLoai = new javax.swing.JComboBox<>();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTatCaSanPham = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("TẤT CẢ SẢN PHẨM");

        jLabel2.setText("Tên: ");

        jLabel3.setText("Giá:");

        jLabel4.setText("Còn hàng:");

        jLabel5.setText("Loại:");

        cbbLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acoustic", "Classic", "Electric", "Bass", "Phụ kiện" }));
        cbbLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLoaiActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        tbTatCaSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Tên", "Giá", "Còn hàng", "Loại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTatCaSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTatCaSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbTatCaSanPham);
        if (tbTatCaSanPham.getColumnModel().getColumnCount() > 0) {
            tbTatCaSanPham.getColumnModel().getColumn(0).setResizable(false);
            tbTatCaSanPham.getColumnModel().getColumn(1).setResizable(false);
            tbTatCaSanPham.getColumnModel().getColumn(2).setResizable(false);
            tbTatCaSanPham.getColumnModel().getColumn(3).setResizable(false);
            tbTatCaSanPham.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConHang, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbLoai, 0, 83, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTen)
                            .addComponent(txtGia, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa)))
                .addGap(56, 56, 56))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnXoa))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtConHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            UUID uuid = UUID.randomUUID();
            String randomString = uuid.toString().substring(0, 8);
			Connection con = JDBCConnection.getJDBCConnection();
            String sql = "select * from products order by type";
            String sql1 = "select name from products where name = '" + txtTen.getText() + "'";
            String sql2 = "insert into products (id_product,name,price,quantity,type) values ('" + randomString + "', '" + txtTen.getText() + "', '" + txtGia.getText() + "', '" + txtConHang.getText() + "', '" + cbbLoai.getSelectedItem() + "');";
            
            Statement ps = con.createStatement();
            ResultSet rs1 = ps.executeQuery(sql1);
            if(rs1.next()) {
            	JOptionPane.showMessageDialog(null, "Sản phẩm đã tồn tại");
            } else {
	            ps.executeUpdate(sql2);
	            ResultSet rs = ps.executeQuery(sql);
	            JOptionPane.showMessageDialog(null, "Thêm sản phẩm thành công");
	            
	            DefaultTableModel model = new DefaultTableModel();
	            
	            ResultSetMetaData rsmd = rs.getMetaData();
				int socot = rsmd.getColumnCount();
				for(int j = 1; j <= socot; j++) {
					model.addColumn(rsmd.getColumnLabel(j));
				}
				
				while(rs.next()) {
					Object[] row = new Object[socot];
					for(int i = 1; i <= socot; i++) {
						row[i - 1] = rs.getObject(i);
					}
					model.addRow(row);
				}
				
				tbTatCaSanPham.setModel(model);
				tbTatCaSanPham.setVisible(true);
            }
    	} catch(Exception e) {}
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        String ten = txtTen.getText();
        String gia = txtGia.getText();
        String soluongtonkho = txtConHang.getText();
        String loai = (String) cbbLoai.getSelectedItem();
        int row2 = tbTatCaSanPham.getSelectedRow();
        String id = tbTatCaSanPham.getValueAt(row2, 0).toString();
        if(!ten.isEmpty())
        try {
			Connection con = JDBCConnection.getJDBCConnection();
            String sql = "select * from products order by type";
            String sql2 = "update products set name=?, price=?, quantity=?, type=? where id_product=?";
            Statement ps = con.createStatement();
            PreparedStatement ps2 = con.prepareStatement(sql2);
            ps2.setString(1, ten);
            ps2.setString(2, gia);
            ps2.setString(3, soluongtonkho);
            ps2.setString(4, loai);
            ps2.setString(5, id );
            
            ps2.executeUpdate();
            ResultSet rs = ps.executeQuery(sql);
            
            DefaultTableModel model = new DefaultTableModel();
            
            ResultSetMetaData rsmd = rs.getMetaData();
            int socot = rsmd.getColumnCount();
            for(int j = 1; j <= socot; j++) {
                    model.addColumn(rsmd.getColumnLabel(j));
            }

            while(rs.next()) {
                    Object[] row = new Object[socot];
                    for(int i = 1; i <= socot; i++) {
                            row[i - 1] = rs.getObject(i);
                    }
                    model.addRow(row);
            }
            tbTatCaSanPham.setModel(model);
            tbTatCaSanPham.setVisible(true);
                       
    	} catch(Exception e) {}
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        String ten = txtTen.getText();
        if(!ten.isEmpty())
        try {
        	Connection con = JDBCConnection.getJDBCConnection();
            String sql = "select * from products order by type";
            String sql2 = "delete from products where name = ?";
            Statement ps = con.createStatement();
            PreparedStatement ps2 = con.prepareStatement(sql2);
            ps2.setString(1, ten);
            
            int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if(option == JOptionPane.YES_OPTION) {
	            ps2.executeUpdate();
	            
	            txtTen.setText("");
	            txtGia.setText("");
	            txtConHang.setText("");
                cbbLoai.setSelectedItem(null);
	            
	            ResultSet rs = ps.executeQuery(sql);
	            
	            DefaultTableModel model = new DefaultTableModel();
	            
	            ResultSetMetaData rsmd = rs.getMetaData();
				int socot = rsmd.getColumnCount();
				for(int j = 1; j <= socot; j++) {
					model.addColumn(rsmd.getColumnLabel(j));
				}
				
				while(rs.next()) {
					Object[] row = new Object[socot];
					for(int i = 1; i <= socot; i++) {
						row[i - 1] = rs.getObject(i);
					}
					model.addRow(row);
				}
				tbTatCaSanPham.setModel(model);
				tbTatCaSanPham.setVisible(true);
            }
            else {
            	return;
            }
    	} catch(Exception e) {}
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String s = txtTimKiem.getText();
        if(!s.isEmpty()){
            s = "%"+s+"%";
            System.out.println(s);
	        try {
				Connection con = JDBCConnection.getJDBCConnection();
	            String sql = "select * from products where name like ? order by type;";
                PreparedStatement ps2 = con.prepareStatement(sql);
	            ps2.setString(1, s);
	            
	            ResultSet rs = ps2.executeQuery();
	            
	            if (!rs.next()) {
                        JOptionPane.showMessageDialog(null, "Không tìm thấy sản phẩm!");
	            } else {
	                DefaultTableModel model = new DefaultTableModel();
	                
	                ResultSetMetaData rsmd = rs.getMetaData();
	                int socot = rsmd.getColumnCount();
	                for(int j = 1; j <= socot; j++) {
	                    model.addColumn(rsmd.getColumnLabel(j));
	                }
	                do {
	                    Object[] row = new Object[socot];
	                    for(int i = 1; i <= socot; i++) {
	                        row[i - 1] = rs.getObject(i);
	                    }
	                    model.addRow(row);
	                } while (rs.next());
	                tbTatCaSanPham.setModel(model);
	                tbTatCaSanPham.setVisible(true);
	            }
	    	} catch(Exception e) {}
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tbTatCaSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTatCaSanPhamMouseClicked
        int row = tbTatCaSanPham.getSelectedRow();
        if (row >= 0) {
            // Lấy thông tin của hàng được chọn.
            String ten = tbTatCaSanPham.getValueAt(row, 1).toString();
            String gia = tbTatCaSanPham.getValueAt(row, 2).toString();
            String conHang = tbTatCaSanPham.getValueAt(row, 3).toString();
            String loai = tbTatCaSanPham.getValueAt(row, 4).toString();
            String id = tbTatCaSanPham.getValueAt(row, 0).toString();
            // Lưu thông tin của hàng được chọn vào các trường tương ứng.
            txtTen.setText(ten);
            txtGia.setText(gia);
            txtConHang.setText(conHang);
            cbbLoai.setSelectedItem(loai);
        }
    }//GEN-LAST:event_tbTatCaSanPhamMouseClicked

    private void cbbLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbLoaiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbLoai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbTatCaSanPham;
    private javax.swing.JTextField txtConHang;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
