/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package guitarshopmanagementsystem;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.UUID;

import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author quoca
 */
public class ElectricJP extends javax.swing.JPanel {

    /**
     * Creates new form ElectricJP
     */
    public ElectricJP() {
        initComponents();
        try {
        	Connection con = JDBCConnection.getJDBCConnection();
            String sql = "select * from products where type = 'Electric'"; 
            PreparedStatement ps = con.prepareCall(sql);
            ResultSet rs = ps.executeQuery();
            
            DefaultTableModel model = new DefaultTableModel();
            
            ResultSetMetaData rsmd = rs.getMetaData();
			int socot = rsmd.getColumnCount();
			for(int j = 1; j <= socot; j++) {
				model.addColumn(rsmd.getColumnLabel(j));
			}
			
			while(rs.next()) {
				Object[] row = new Object[socot];
				for(int i = 1; i <= socot; i++) {
					row[i - 1] = rs.getObject(i);
				}
				model.addRow(row);
			}
			tbElectric.setModel(model);
			tbElectric.setVisible(true);
	
    	} catch(Exception e) {}  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbElectric = new javax.swing.JTable();
        rbduoi2trieu = new javax.swing.JRadioButton();
        rbtu2den5trieu = new javax.swing.JRadioButton();
        rbtren5trieu = new javax.swing.JRadioButton();
        btnTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ButtonGroup group = new ButtonGroup();
        group.add(rbduoi2trieu);
        group.add(rbtu2den5trieu);
        group.add(rbtren5trieu);

        tbElectric.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Tên", "Giá", "Còn hàng", "Loại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbElectric);

        rbduoi2trieu.setText("Dưới 2 triệu");
        rbduoi2trieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbduoi2trieuActionPerformed(evt);
            }
        });

        rbtu2den5trieu.setText("Từ 2-5 triệu");
        rbtu2den5trieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtu2den5trieuActionPerformed(evt);
            }
        });

        rbtren5trieu.setText("Trên 5 triệu");
        rbtren5trieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtren5trieuActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("ELECTRIC");
        jLabel1.setName(""); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiem)
                .addGap(146, 146, 146))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(rbduoi2trieu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtu2den5trieu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtren5trieu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addGap(127, 127, 127))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbduoi2trieu)
                            .addComponent(rbtu2den5trieu)
                            .addComponent(rbtren5trieu))
                        .addGap(42, 42, 42)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rbduoi2trieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbduoi2trieuActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://127.0.0.1:3306/guitarshop";
            Connection con = DriverManager.getConnection(url,"root","01082003");
            String sql = "select * from products where type = 'Electric' and price <=2000000;";
            PreparedStatement ps = con.prepareCall(sql);
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            ResultSetMetaData rsmd = rs.getMetaData();
            int socot = rsmd.getColumnCount();
            for(int j = 1; j <= socot; j++) {
                model.addColumn(rsmd.getColumnLabel(j));
            }

            while(rs.next()) {
                Object[] row = new Object[socot];
                for(int i = 1; i <= socot; i++) {
                    row[i - 1] = rs.getObject(i);
                }
                model.addRow(row);
            }
            tbElectric.setModel(model);
            tbElectric.setVisible(true);

        } catch(Exception e) {}
    }//GEN-LAST:event_rbduoi2trieuActionPerformed

    private void rbtu2den5trieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtu2den5trieuActionPerformed
        // TODO add your handling code here:
        try {
        	Connection con = JDBCConnection.getJDBCConnection();
            String sql = "select * from products where type = 'Electric' and price between 2000000 and 5000000;";
            PreparedStatement ps = con.prepareCall(sql);
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            ResultSetMetaData rsmd = rs.getMetaData();
            int socot = rsmd.getColumnCount();
            for(int j = 1; j <= socot; j++) {
                model.addColumn(rsmd.getColumnLabel(j));
            }

            while(rs.next()) {
                Object[] row = new Object[socot];
                for(int i = 1; i <= socot; i++) {
                    row[i - 1] = rs.getObject(i);
                }
                model.addRow(row);
            }
            tbElectric.setModel(model);
            tbElectric.setVisible(true);

        } catch(Exception e) {}
    }//GEN-LAST:event_rbtu2den5trieuActionPerformed

    private void rbtren5trieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtren5trieuActionPerformed
        // TODO add your handling code here:
        try {
        	Connection con = JDBCConnection.getJDBCConnection();
            String sql = "select * from products where type = 'Electric' and price >=5000000;";
            PreparedStatement ps = con.prepareCall(sql);
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            ResultSetMetaData rsmd = rs.getMetaData();
            int socot = rsmd.getColumnCount();
            for(int j = 1; j <= socot; j++) {
                model.addColumn(rsmd.getColumnLabel(j));
            }

            while(rs.next()) {
                Object[] row = new Object[socot];
                for(int i = 1; i <= socot; i++) {
                    row[i - 1] = rs.getObject(i);
                }
                model.addRow(row);
            }
            tbElectric.setModel(model);
            tbElectric.setVisible(true);

        } catch(Exception e) {}
    }//GEN-LAST:event_rbtren5trieuActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String s = txtTimKiem.getText();
        if(!s.isEmpty()){
            s = "%"+s+"%";
            System.out.println(s);
            try {
            	Connection con = JDBCConnection.getJDBCConnection();
                String sql = "select * from products where type = 'Electric' and name like ?;";
                PreparedStatement ps2 = con.prepareStatement(sql);
                ps2.setString(1, s);

                ResultSet rs = ps2.executeQuery();

                if (!rs.next()) {
                    JOptionPane.showMessageDialog(null, "Không tìm thấy sản phẩm!");
                } else {
                    DefaultTableModel model = new DefaultTableModel();

                    ResultSetMetaData rsmd = rs.getMetaData();
                    int socot = rsmd.getColumnCount();
                    for(int j = 1; j <= socot; j++) {
                        model.addColumn(rsmd.getColumnLabel(j));
                    }
                    do {
                        Object[] row = new Object[socot];
                        for(int i = 1; i <= socot; i++) {
                            row[i - 1] = rs.getObject(i);
                        }
                        model.addRow(row);
                    } while (rs.next());
                    tbElectric.setModel(model);
                    tbElectric.setVisible(true);
                }
            } catch(Exception e) {}
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbduoi2trieu;
    private javax.swing.JRadioButton rbtren5trieu;
    private javax.swing.JRadioButton rbtu2den5trieu;
    private javax.swing.JTable tbElectric;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
